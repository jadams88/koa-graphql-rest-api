type User {
  id: ID!
  firstName: String!
  lastName: String!
  username: String!
  emailAddress: String!
  dateOfBirth: Date!
}

input NewUserInput {
  firstName: String!
  lastName: String!
  username: String!
  emailAddress: String!
  dateOfBirth: Date!
}

input UpdatedUserInput {
  id: ID!
  firstName: String
  lastName: String
  username: String
  emailAddress: String
  dateOfBirth: Date
}

type AuthPayload {
  token: String
}

type Query {
  User(id: ID!): User!
  allUsers: [User]!
}

type Mutation {
  login(username: String!, password: String!): AuthPayload!
  newUser(input: NewUserInput!): User!
  updateUser(input: UpdatedUserInput!): User!
  removeUser(id: ID!): User!
}

type Subscription {
  User: User
}
